#+TITLE: Methods


* Method Syntax

Methods are similar to functions: we declare them with the fn keyword and a name, they can have parameters and a return value, and they contain some code thatâ€™s run when the method is called from somewhere else. Unlike functions, methods are defined within the context of a struct (or an enum or a trait object, which we cover in Chapters 6 and 17, respectively), and their first parameter is always self, which represents the instance of the struct the method is being called on.

** Defining Methods
#+begin_src rust
  #[derive(Debug)]
  stuct Rectangle {
      width: u32,
      height: u32
  }

  impl Rectangle {
      fn area(&self) -> u32 {
	  self.width * self.height
      }
  }

  fn main () {
      let rect1 = Rectangle {
	  
      }
  }
#+end_src
